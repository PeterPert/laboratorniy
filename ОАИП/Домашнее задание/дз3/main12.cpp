#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;
int main() {
    int a[4][3];
    for (int i = 0; i < 4; i++) {
        cout << "–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã" << i + 1 << "—Ç–æ—á–∫–∏" << endl;
        for (int j = 0; j < 3; j++) {
            cin >> a[i][j];
        }
    }
    double A[4][5];
    for (int i = 0; i < 4; i++) {
        int h = 0;
        for (int j = 0; j < 5; j++) {
            if (h == 3) {
                A[i][j] = 1;
            }
            else if (h == 4) {
                A[i][j] = -pow(a[i][j - 4], 2) - pow(a[i][j - 3], 2) - pow(a[i][j - 2], 2);
            }
            else {
                A[i][j] = a[i][j];
            }
            h += 1;
        }
    }
    int const n = 4;
    // –ü—Ä—è–º–æ–π —Ö–æ–¥ –º–µ—Ç–æ–¥–∞ –ì–∞—É—Å—Å–∞
    for (int k = 0; k < n; k++) {
        // –ü–æ–∏—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å—Ç–æ–ª–±—Ü–µ
        int max_row = k;
        for (int i = k + 1; i < n; i++) {
            if (abs(A[i][k]) > abs(A[max_row][k])) {
                max_row = i;
            }
        }
        
        // –ü–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫
        if (max_row != k) {
            for (int j = 0; j <= n; j++) {
                double temp = A[k][j];
                A[k][j] = A[max_row][j];
                A[max_row][j] = temp;
            }
        }
        
        // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
        double pivot = A[k][k];
        for (int j = k; j <= n; j++) {
            A[k][j] /= pivot;
        }
        
        // –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–∑ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫
        for (int i = 0; i < n; i++) {
            if (i != k) {
                double factor = A[i][k];
                for (int j = k; j <= n; j++) {
                    A[i][j] -= factor * A[k][j];
                }
            }
        }
    }
    
    // –†–µ—à–µ–Ω–∏–µ (–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–æ–ª–±–µ—Ü —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä–Ω–∏)
    double x[n];
    for (int i = 0; i < n; i++) {
        x[i] = A[i][n];
    }
    
    // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    //cout << "–†–µ—à–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:" << endl;
    //for (int i = 0; i < n; i++) {
    //    cout << "x" << i+1 << " = " << fixed << setprecision(2) << x[i] << endl;
    //}
    // (ùë•0, ùë¶0, ùëß0) –±—É–¥—É—Ç:
    double y[3];
    for (int i = 0; i < 3; i++) {
        y[i] = (-0.5)*x[i];
    }
    //–∏—â–µ–º —Ä–∞–¥–∏—É—Å –≤ –∫–≤–∞–¥—Ä–∞—Ç–µ
    double r = pow(y[0],2)+pow(y[1],2)+pow(y[2],2) - x[3];
    // –≤—ã–≤–≤–æ–¥–∏–º —Ñ–æ—Ä–º—É–ª—É 
    cout << fixed << setprecision(2) << "(x-" << y[0] << ")^2 + (y-"<< y[1] << ")^2 + (z-" << y[2] << ")^2 =" <<  r;
}