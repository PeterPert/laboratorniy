#include <iostream>
using namespace std;

int main() {
    // Первый многоугольник
    cout << "Первый многоугольник" << endl;
    int const n1 = 4; // количество точек первого многоугольника
    int a[n1 + 1][2];
    cout << "введите координаты точек первого многоугольника" << endl;
    cout << "вводить координаты надо против часовой стрелки" << endl;
    cout << "последнюю ввести начальную координату" << endl;
    for (int i = 0; i < n1 + 1; i++) {
        for (int j = 0; j < 2; j++) {
            cin >> a[i][j];
        }
    }

    // Второй многоугольник
    cout << "Второй многоугольник" << endl;
    int const n2 = 4; // количество точек второго многоугольника
    int b[n2 + 1][2];
    cout << "введите координаты точек второго многоугольника" << endl;
    cout << "вводить координаты надо против часовой стрелки" << endl;
    cout << "последнюю ввести начальную координату" << endl;
    for (int i = 0; i < n2 + 1; i++) {
        for (int j = 0; j < 2; j++) {
            cin >> b[i][j];
        }
    }

    bool peresekautsya = false; // проверка на пересечение

    // Проверяем все стороны первого многоугольника со всеми сторонами второго
    for (int i = 0; i < n1; i++) {
        for (int j = 0; j < n2; j++) {
            // Точки первого отрезка
            int x1 = a[i][0], y1 = a[i][1];
            int x2 = a[i + 1][0], y2 = a[i + 1][1];

            // Точки второго отрезка
            int x3 = b[j][0], y3 = b[j][1];
            int x4 = b[j + 1][0], y4 = b[j + 1][1];

            // Векторные произведения для проверки пересечения
            int v1 = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);
            int v2 = (x4 - x3) * (y2 - y3) - (y4 - y3) * (x2 - x3);
            int v3 = (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1);
            int v4 = (x2 - x1) * (y4 - y1) - (y2 - y1) * (x4 - x1);

            // Отрезки пересекаются если векторные произведения разных знаков
            if ((v1 * v2 < 0) && (v3 * v4 < 0)) {
                peresekautsya = true;
                break;
            }
        }
    }
    if (peresekautsya == true) {
        cout << "многоугольники пересекаются(yes)" << endl;
    }
    else {
        cout << "многоугольники не пересекаются(no)" << endl;
    }
}